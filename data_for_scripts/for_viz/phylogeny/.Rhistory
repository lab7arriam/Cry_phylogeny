exp1
recs_events_numbers
ggplot(recs_events_numbers, aes(x=Num_tox, fill=domain)) +
geom_bar(stat='count',alpha=0.75, color='black')+
theme_bw()+scale_fill_manual(labels = c("domain1",'domain2','domain3'), values = c("#a60b0b", '#2980b9' ,'#bdbd00'))+
theme( axis.text.x = element_text(color='black',
size=12),
axis.title.x=element_text(face="bold", color="black",
size=14),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(color='black',
size=12),
axis.title.y = element_text(face="bold", color="black",
size=14),
legend.title=element_text(face="bold",size=16),
legend.text=element_text(size=14),
legend.position = c(0.5, 0.66)
)+
xlab('Number of toxins') +
ylab('Frequency')+
guides(fill= guide_legend(title=""))+
facet_wrap(~domain)
ggplot(recs_events_numbers, aes(x=Num_tox, fill=domain)) +
geom_bar(stat='count',alpha=0.75, color='black')+
theme_bw()+scale_fill_manual(labels = c("domain1",'domain2','domain3'), values = c("#a60b0b", '#2980b9' ,'#bdbd00'))+
theme( axis.text.x = element_text(color='black',
size=12),
axis.title.x=element_text(face="bold", color="black",
size=14),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(color='black',
size=12),
axis.title.y = element_text(face="bold", color="black",
size=14),
legend.title=element_text(face="bold",size=16),
legend.text=element_text(size=14),
legend.position = c(0.5, 0.66)
)
events_numbers
ggplot(recs_events_numbers, aes(x=Tox_number, fill=domain)) +
geom_bar(stat='count',alpha=0.75, color='black')+
theme_bw()+scale_fill_manual(labels = c("domain1",'domain2','domain3'), values = c("#a60b0b", '#2980b9' ,'#bdbd00'))+
theme( axis.text.x = element_text(color='black',
size=12),
axis.title.x=element_text(face="bold", color="black",
size=14),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(color='black',
size=12),
axis.title.y = element_text(face="bold", color="black",
size=14),
legend.title=element_text(face="bold",size=16),
legend.text=element_text(size=14),
legend.position = c(0.5, 0.66)
)+
xlab('Number of toxins') +
ylab('Frequency')+
guides(fill= guide_legend(title=""))+
facet_wrap(~domain)
recs_events_ids<- read.csv('/home/anton/phyl/recombination/NO_PAT/unknowns/mean_ids_for_events.tsv', header = T, sep = "\t", stringsAsFactors = F)
ident_summary <-recs_events_ids[,c(4,6,8)] %>%  group_by(Curr_domain,Num_all) %>% summarize(id_mean=mean(Mean_ident))  %>% as.data.frame()
mean(recs_events_ids[recs_events_ids$Curr_domain=='domain1'& recs_events_ids$Num_all==2,8]) #86.64
mean(recs_events_ids[recs_events_ids$Curr_domain=='domain1'& recs_events_ids$Num_all>2,8]) #74.02
mean(recs_events_ids[recs_events_ids$Curr_domain=='domain1',8]) #81.70
mean(recs_events_ids[recs_events_ids$Curr_domain=='domain2'& recs_events_ids$Num_all==2,8]) #85.64
mean(recs_events_ids[recs_events_ids$Curr_domain=='domain2'& recs_events_ids$Num_all>2,8]) #72.78
mean(recs_events_ids[recs_events_ids$Curr_domain=='domain2',8]) #80.33
mean(recs_events_ids[recs_events_ids$Curr_domain=='domain3'& recs_events_ids$Num_all==2,8]) #79.97
mean(recs_events_ids[recs_events_ids$Curr_domain=='domain3'& recs_events_ids$Num_all>2,8]) #65.09
mean(recs_events_ids[recs_events_ids$Curr_domain=='domain3',8]) #72.69
domain1_model <- lm(Mean_ident ~ Num_all, data = recs_events_ids[recs_events_ids$Curr_domain=='domain1',])
predict(domain1_model, newdata = exp1) #81.70
domain2_model <- lm(Mean_ident ~ Num_all, data = recs_events_ids[recs_events_ids$Curr_domain=='domain2',])
predict(domain2_model, newdata = exp2) #80.33
domain3_model <- lm(Mean_ident ~ Num_all, data = recs_events_ids[recs_events_ids$Curr_domain=='domain3',])
predict(domain3_model, newdata = exp3) #72.69
ggplot(recs_events_ids, aes(fill=Curr_domain)) +
geom_bar(aes(Num_all, Mean_ident),
position = "dodge", stat = "summary", fun.y = "mean", alpha=0.75, color='black')+
#geom_bar(stat='count',alpha=0.45, color='black')+
theme_bw()+scale_fill_manual(labels = c("domain1",'domain2','domain3'), values = c("#a60b0b", '#2980b9' ,'#bdbd00'))+
theme( axis.text.x = element_text(color='black',
size=12),
axis.title.x=element_text(face="bold", color="black",
size=14),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(color='black',
size=12),
axis.title.y = element_text(face="bold", color="black",
size=14),
legend.title=element_text(face="bold",size=16),
legend.text=element_text(size=14),
legend.position = c(0.5, 0.66)
)+
xlab('Number of toxins') +
ylab('Mean identity')+ylim(c(0,100))+
guides(fill= guide_legend(title=""))+
facet_wrap(~Curr_domain)
recs_events_ids
ggplot(recs_events_ids, aes(fill=Curr_domain)) +
geom_bar(aes(Num_all, Mean_ident),
position = "dodge", stat = "summary", fun.y = "mean", alpha=0.75, color='black')+
#geom_bar(stat='count',alpha=0.45, color='black')+
theme_bw()+scale_fill_manual(labels = c("domain1",'domain2','domain3'), values = c("#a60b0b", '#2980b9' ,'#bdbd00'))+
theme( axis.text.x = element_text(color='black',
size=12),
axis.title.x=element_text(face="bold", color="black",
size=14),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(color='black',
size=12),
axis.title.y = element_text(face="bold", color="black",
size=14),
legend.title=element_text(face="bold",size=16),
legend.text=element_text(size=14),
legend.position = c(0.5, 0.66)
)+
xlab('Number of toxins') +
ylab('Mean identity')+ylim(c(0,100))+
guides(fill= guide_legend(title=""))+
facet_wrap(~Curr_domain)
ident_summary
recs_events_ids<- read.csv('/home/anton/phyl/recombination/NO_PAT/unknowns/mean_ids_for_events.tsv', header = T, sep = "\t", stringsAsFactors = F)
ident_summary <-recs_events_ids[,c(4,6,8)] %>%  group_by(Curr_domain,Num_all) %>% summarize(id_mean=mean(Mean_ident))  %>% as.data.frame()
mean(recs_events_ids[recs_events_ids$Curr_domain=='domain1'& recs_events_ids$Num_all==2,8]) #86.64
mean(recs_events_ids[recs_events_ids$Curr_domain=='domain1'& recs_events_ids$Num_all>2,8]) #74.02
mean(recs_events_ids[recs_events_ids$Curr_domain=='domain1',8]) #81.70
mean(recs_events_ids[recs_events_ids$Curr_domain=='domain2'& recs_events_ids$Num_all==2,8]) #85.64
mean(recs_events_ids[recs_events_ids$Curr_domain=='domain2'& recs_events_ids$Num_all>2,8]) #72.78
mean(recs_events_ids[recs_events_ids$Curr_domain=='domain2',8]) #80.33
mean(recs_events_ids[recs_events_ids$Curr_domain=='domain3'& recs_events_ids$Num_all==2,8]) #79.97
mean(recs_events_ids[recs_events_ids$Curr_domain=='domain3'& recs_events_ids$Num_all>2,8]) #65.09
mean(recs_events_ids[recs_events_ids$Curr_domain=='domain3',8]) #72.69
domain1_model <- lm(Mean_ident ~ Num_all, data = recs_events_ids[recs_events_ids$Curr_domain=='domain1',])
predict(domain1_model, newdata = exp1) #81.70
domain2_model <- lm(Mean_ident ~ Num_all, data = recs_events_ids[recs_events_ids$Curr_domain=='domain2',])
predict(domain2_model, newdata = exp2) #80.33
domain3_model <- lm(Mean_ident ~ Num_all, data = recs_events_ids[recs_events_ids$Curr_domain=='domain3',])
predict(domain3_model, newdata = exp3) #72.69
ggplot(recs_events_ids, aes(fill=Curr_domain)) +
geom_bar(aes(Num_all, Mean_ident),
position = "dodge", stat = "summary", fun.y = "mean", alpha=0.75, color='black')+
#geom_bar(stat='count',alpha=0.45, color='black')+
theme_bw()+scale_fill_manual(labels = c("domain1",'domain2','domain3'), values = c("#a60b0b", '#2980b9' ,'#bdbd00'))+
theme( axis.text.x = element_text(color='black',
size=12),
axis.title.x=element_text(face="bold", color="black",
size=14),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(color='black',
size=12),
axis.title.y = element_text(face="bold", color="black",
size=14),
legend.title=element_text(face="bold",size=16),
legend.text=element_text(size=14),
legend.position = c(0.5, 0.66)
)+
xlab('Number of toxins') +
ylab('Mean identity')+ylim(c(0,100))+
guides(fill= guide_legend(title=""))
recs_events_ids
ggplot(recs_events_ids, aes(x=Num_all, y= Mean_ident,fill=Curr_domain)) +
geom_point(shape=21, col='black', alpha=0.7, size=4)+
geom_smooth(method = 'lm', col = "black")+
theme_bw()+scale_fill_manual(labels = c("domain1",'domain2','domain3'), values = c("#a60b0b", '#2980b9' ,'#bdbd00'))+
theme( axis.text.x = element_text(color='black',
size=12),
axis.title.x=element_text(face="bold", color="black",
size=14),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(color='black',
size=12),
axis.title.y = element_text(face="bold", color="black",
size=14),
legend.title=element_text(face="bold",size=16),
legend.text=element_text(size=14)
)+
xlab('Number of toxins') +
ylab('Mean identity')+
guides(fill= guide_legend(title=""))+
facet_wrap(~Curr_domain, scales='free')
recs_datasets_stat <- read.csv('/home/anton/phyl/strain_graph/recombinants_datasets_stat_fixed_any.csv', header = T, sep = "\t", stringsAsFactors = F)
recs_datasets_stat_table <- as.data.frame(table(recs_datasets_stat[, c(3,4)]))
dframe2_new = recs_datasets_stat  %>% group_by(stat_type, Pair_type) %>% tally()
cp <- coord_polar(theta = "y")
cp$is_free <- function() TRUE
ggplot(dframe2_new , aes(x=factor(1), y=n,fill=Pair_type)) +
geom_bar(stat="identity", width=1, alpha=0.6, col='black')+
cp+
theme_bw()+
geom_text(aes(label = n),
position = position_stack(vjust = 0.5), size=10)+
geom_text(aes(label = n),
position = position_stack(vjust = 0.5), size=10)+
geom_text(aes(label = n),
position = position_stack(vjust = 0.5), size=10)+
scale_fill_manual(values = c("#a60b0b", '#2980b9' ,'#bdbd00', 'grey'))+
theme( axis.text.x = element_blank(),
axis.title.x=element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
legend.title=element_text(face="bold",size=14),
legend.text=element_text(size=12),
axis.ticks = element_blank())+
guides(fill= guide_legend(title="Domain"))+
facet_wrap(~stat_type, scales='free')+
scale_size(guide = 'none')+
theme(aspect.ratio = 1)
recs_datasets_stat
full_tree <-read.tree("/home/anton/phyl/trees/ML_Full_nuc.raxml.support.nwk.renamed.nwk")
dom1_tree <- read.tree("/home/anton/phyl/trees/NO_PAT/source_trees/ML_Dom1.raxml.support")
dom2_tree <- read.tree("/home/anton/phyl/trees/NO_PAT/source_trees/ML_Dom2.raxml.support")
dom3_tree <- read.tree("/home/anton/phyl/trees/NO_PAT/source_trees/ML_Dom3.raxml.support")
groupInfo <- split(full_tree$tip.label,
gsub("([A-Z]{2,3})_([a-zA-Z]+[0-9]+[A-Za-z]+)(.*)", '\\1', full_tree$tip.label))
tr_gr <- groupOTU(full_tree, groupInfo)
full_plot <- #ggtree(tr_gr, aes(color=group),branch.length='none',alpha =1)+
#scale_color_manual(values = c("grey",'grey'))+
#geom_tiplab(size=0.5, show.legend=T, color='black')
ggtree(tr_gr, aes(color=group), layout='circular',branch.length='none',alpha =1)+
scale_color_manual(values = c('#5F9EA0', "#DC143C"))+
geom_tiplab(size=1, aes(angle=angle), show.legend=T, color='black')
full_plot
groupInfo <- split(dom1_tree$tip.label,
gsub("([A-Z]{2,3})_([a-zA-Z]+[0-9]+[A-Za-z]+)(.*)", '\\1', dom1_tree$tip.label))
tr_gr <- groupOTU(dom1_tree, groupInfo)
ggtree(tr_gr, aes(color=group), layout='circular',branch.length='none',alpha =1)+
scale_color_manual(values = c("#DC143C",'#5F9EA0'))+
geom_tiplab(size=1, aes(angle=angle), show.legend=T, color='black')
groupInfo <- split(dom2_tree$tip.label,
gsub("([A-Z]{2,3})_([a-zA-Z]+[0-9]+[A-Za-z]+)(.*)", '\\1', dom2_tree$tip.label))
tr_gr <- groupOTU(dom2_tree, groupInfo)
ggtree(tr_gr, aes(color=group), layout='circular',branch.length='none',alpha =1)+
scale_color_manual(values = c("#DC143C",'#5F9EA0'))+
geom_tiplab(size=1, aes(angle=angle), show.legend=T, color='black')
groupInfo <- split(dom3_tree$tip.label, gsub("([A-Z]{2,3})_([a-zA-Z]+[0-9]+[A-Za-z]+)(.*)", '\\1', full_tree$tip.label))
tr_gr <- groupOTU(dom3_tree, groupInfo)
ggtree(tr_gr, aes(color=group), layout='circular',branch.length='none',alpha =1)+
scale_color_manual(values = c("#DC143C",'#5F9EA0'))+
geom_tiplab(size=1, aes(angle=angle), show.legend=T, color='black')
setwd("~/phyl/data_for_git/data_for_scripts/for_viz/phylogeny")
setwd("~/phyl/data_for_git/data_for_scripts/for_viz/phylogeny")
full_tree <-read.tree("ML_Full_nuc.raxml.support.nwk")
dom1_tree <- read.tree("ML_Dom1.raxml.support")
dom2_tree <- read.tree("ML_Dom2.raxml.support")
dom3_tree <- read.tree("ML_Dom3.raxml.support")
groupInfo <- split(full_tree$tip.label,
gsub("([A-Z]{2,3})_([a-zA-Z]+[0-9]+[A-Za-z]+)(.*)", '\\1', full_tree$tip.label))
tr_gr <- groupOTU(full_tree, groupInfo)
full_plot <-
ggtree(tr_gr, aes(color=group), layout='circular',branch.length='none',alpha =1)+
scale_color_manual(values = c('#5F9EA0', "#DC143C"))+
geom_tiplab(size=1, aes(angle=angle), show.legend=T, color='black')
groupInfo <- split(dom1_tree$tip.label,
gsub("([A-Z]{2,3})_([a-zA-Z]+[0-9]+[A-Za-z]+)(.*)", '\\1', dom1_tree$tip.label))
tr_gr <- groupOTU(dom1_tree, groupInfo)
ggtree(tr_gr, aes(color=group), layout='circular',branch.length='none',alpha =1)+
scale_color_manual(values = c("#DC143C",'#5F9EA0'))+
geom_tiplab(size=1, aes(angle=angle), show.legend=T, color='black')
groupInfo <- split(dom2_tree$tip.label,
gsub("([A-Z]{2,3})_([a-zA-Z]+[0-9]+[A-Za-z]+)(.*)", '\\1', dom2_tree$tip.label))
tr_gr <- groupOTU(dom2_tree, groupInfo)
ggtree(tr_gr, aes(color=group), layout='circular',branch.length='none',alpha =1)+
scale_color_manual(values = c("#DC143C",'#5F9EA0'))+
geom_tiplab(size=1, aes(angle=angle), show.legend=T, color='black')
groupInfo <- split(dom3_tree$tip.label, gsub("([A-Z]{2,3})_([a-zA-Z]+[0-9]+[A-Za-z]+)(.*)", '\\1', full_tree$tip.label))
tr_gr <- groupOTU(dom3_tree, groupInfo)
ggtree(tr_gr, aes(color=group), layout='circular',branch.length='none',alpha =1)+
scale_color_manual(values = c("#DC143C",'#5F9EA0'))+
geom_tiplab(size=1, aes(angle=angle), show.legend=T, color='black')
cor_cophenetic(dom1_tree, dom2_tree) #0.7673982
cor_cophenetic(dom1_tree, dom3_tree) #0.6663316
cor_cophenetic(dom2_tree, dom3_tree) #0.6918381
cor_cophenetic(full_tree, dom1_tree) #0.8940708
cor_cophenetic(full_tree, dom2_tree) #0.8758706
cor_cophenetic(full_tree, dom3_tree) #0.758726
tree_table <- tree_table[c(1:4),]
tree_table$Colles_Like <-0
tree_table$Sackin <-0
tree_table$Cophenetic <-0
c(balance.indices(dom1_tree))
c(balance.indices(dom2_tree))
c(balance.indices(dom3_tree))
c(balance.indices(full_tree))
dom1_seq <- read.phyDat('domain1.msa', format = "fasta", type = "DNA")
dom2_seq <- read.phyDat('domain2.msa', format = "fasta", type = "DNA")
dom3_seq <- read.phyDat('domain3.msa', format = "fasta", type = "DNA")
full_seq <- read.phyDat('All_domains.msa', format = "fasta", type = "DNA")
CI(dom1_tree, dom1_seq) #0.05109511 -> 0.08954948
CI(dom2_tree, dom2_seq) #0.04872422 -> 0.09955026
CI(dom3_tree, dom3_seq) #0.04614071 -> 0.08901361
CI(full_tree, full_seq) #0.0447744 -> 0.08669106
RI(dom1_tree, dom1_seq) #0.6081937 -> 0.6053512
RI(dom2_tree, dom2_seq) #0.6097294 -> 0.5951812
RI(dom3_tree, dom3_seq) #0.5718591 -> 0.5707345
RI(full_tree, full_seq) #0.5610415 -> 0.5570568
coph1_matr <- cophenetic.phylo(dom1_tree)
coph1_matr[upper.tri(coph1_matr)] <- 0
coph2_matr <- cophenetic.phylo(dom2_tree)
coph2_matr[upper.tri(coph2_matr)] <- 0
coph3_matr <- cophenetic.phylo(dom3_tree)
coph3_matr[upper.tri(coph3_matr)] <- 0
cophf_matr <- cophenetic.phylo(full_tree)
cophf_matr[upper.tri(cophf_matr)] <- 0
sum(coph1_matr) #110671.3
sum(coph2_matr) #124245.1
sum(coph3_matr) #88018.16
sum(cophf_matr) #101705.4
library("DECIPHER")
dend1 <- ReadDendrogram(file="no_support/ML_Dom1.raxml.bestTree")
dend2 <- ReadDendrogram(file="no_support/ML_Dom2.raxml.bestTree")
dend3 <- ReadDendrogram(file="no_support/ML_Dom3.raxml.bestTree")
dendf <- ReadDendrogram(file="no_support/ML_Full_nuc.raxml.bestTree")
## rearrange in ladderized fashion
dnd1 <- ladderize(sort(dend1) )
dnd2 <- ladderize(sort(dend2))
dnd3 <- ladderize(sort(dend3) )
dndf <- ladderize(sort(dendf))
?tanglegram
## plot the tanglegram
dndlist1f <- dendextend::dendlist(dnd1, dndf)
dndlist2f <- dendextend::dendlist(dnd2, dndf)
dndlist3f <- dendextend::dendlist(dnd3, dndf)
dndlist3f %>% tanglegram(common_subtrees_color_branches = TRUE,
lab.cex = .01, margin_inner = .02, edge.lwd=.8,
margin_outer=12,margin_bottom=0.0000,lwd=.3, axes=F,sort=T,
type ='r',cex_main=2.4,
main_left ='Domain3', main_right='Full',
highlight_distinct_edges = F,
highlight_branches_lwd = F,
faster=F)
rec_events_filt_man <- read.csv('/home/anton/phyl/recombination/NO_PAT/manhattan/recomb_manhattan_filtered.tsv', header = F, sep = "\t", stringsAsFactors = F)
rec_events_unpivot_man <- read.csv('/home/anton/phyl/recombination/NO_PAT/manhattan/recomb_manhattan_filtered_unpivot.tsv', header = F, sep = "\t", stringsAsFactors = F)
rec_events_raw_man$V2=-log10(as.numeric(rec_events_raw_man$V2))
rec_events_filt_man$V2=-log10(as.numeric(rec_events_filt_man$V2))
rec_events_unpivot_man$V2=-log10(as.numeric(rec_events_unpivot_man$V2))
#rec_events_filt  <- rec_events %>% filter(rec_events$V1>75 & rec_events$V1<125 | rec_events$V1>180 & rec_events$V1<220 | rec_events$V1>280)
ggplot(rec_events_unpivot_man, aes(V1,V2,fill=V3)) +
geom_point(alpha = 0.95,shape=21, color='black',size=4) +
theme_bw()+
scale_fill_manual(values = c("#a60b0b", '#2980b9' ,'#bdbd00'))+
labs(y = "-log10P") +
labs(x = "Domain coordinate")+xlim(0.5,300)+
geom_vline(xintercept=100, linetype="dashed", color = "#606060",size=2, alpha = 0.7)+
geom_vline(xintercept=200, linetype="dashed", color = "#606060",size=2, alpha = 0.7)+
theme( axis.text.x = element_text(color='black',
size=12),
axis.title.x=element_text(face="bold", color="black",
size=14),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.17, 0.76),
axis.text.y = element_text(color='black',
size=12),
axis.title.y = element_text(face="bold", color="black",
size=14),
legend.title=element_text(face="bold",size=14),
legend.text=element_text(size=12))+
guides(fill= guide_legend(title="Swapped domain", override.aes = list(size = 6.5)))
ggplot(multiclust_mism , aes(x=coord, y=cluster, fill=site_type)) +
geom_point(shape=21, alpha=0.7, color='black', size=3)+
geom_vline(xintercept=100, linetype="dashed", color = "darkgreen",size=2, alpha = 0.7)+
geom_vline(xintercept=200, linetype="dashed", color = "darkgreen",size=2, alpha = 0.7)+
theme_bw()+
#scale_fill_manual(labels = c("Indel",'Non-syn','Indel+Non-syn', 'Syn'), values = c('#bdbd00','#2980b9','#a60b0b','grey'))+
scale_fill_manual(labels = c("Indel",'Non-syn','Syn'), values = c('#042AB6','#D7650C','#F0ECF0'))+
theme( axis.text.x = element_text(color='black',
size=12),
axis.title.x=element_text(face="bold", color="black",
size=14),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(color='black',
size=12),
axis.title.y = element_text(face="bold", color="black",
size=14),
legend.title=element_text(face="bold",size=16),
legend.text=element_text(size=14))+
xlab('Coordinate') +
ylab('Cluster')+
guides(fill= guide_legend(title=""))
multiclust_for_heatmap
sites_stat
mult_non_syn_rate
mult_length_stat
mult_num_stat
mult_types_stat
ggplot(mult_non_syn_rate, aes(x=domain, y=ratio, fill=domain)) +
geom_boxplot(alpha=0.8)+scale_fill_manual(values = c('#a60b0b','#2980b9', '#bdbd00'))+
theme( axis.text.x = element_text(color='black',
size=12),
axis.title.x=element_text(face="bold", color="black",
size=14),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(color='black',
size=12),
axis.title.y = element_text(face="bold", color="black",
size=14),
legend.title=element_text(face="bold",size=14),
legend.text=element_text(size=12))+
xlab("Domain") +
ylab('Nonsynonymous ratio')+
guides(fill= guide_legend(title="Domain"))
#Read the data with pair-wise comparisions between the sequences of the domains for reference clusters and all toxins
id_domain_1 <- read.csv('/home/anton/phyl/recombination/NO_PAT/descriptive_stats/id_ref_domain_1.csv', header = F, sep = "\t", stringsAsFactors = F)
id_domain_3
id_domain_1 <- read.csv('id_ref_domain_1.csv', header = F, sep = "\t", stringsAsFactors = F)
id_domain_2 <- read.csv('id_ref_domain_2.csv', header = F, sep = "\t", stringsAsFactors = F)
id_domain_3 <- read.csv('id_ref_domain_3.csv', header = F, sep = "\t", stringsAsFactors = F)
id_domain_1_all <- read.csv('id_all_domain_1.csv', header = F, sep = "\t", stringsAsFactors = F)
id_domain_2_all <- read.csv('id_all_domain_2.csv', header = F, sep = "\t", stringsAsFactors = F)
id_domain_3_all <- read.csv('id_all_domain_3.csv', header = F, sep = "\t", stringsAsFactors = F)
#Assign the type of the toxins
id_domain_1$type <-'ref'
id_domain_2$type <-'ref'
id_domain_3$type <-'ref'
id_domain_1_all$type <-'all'
id_domain_2_all$type <-'all'
id_domain_3_all$type <-'all'
#Combine the data for reference clusters and all toxins
id_domain_1 <- rbind(id_domain_1, id_domain_1_all)
id_domain_2 <- rbind(id_domain_2, id_domain_2_all)
id_domain_3 <- rbind(id_domain_3, id_domain_3_all)
#Exclude comparisions for the same toxins
id_domain_1 <- id_domain_1[id_domain_1$V1!=0,]
id_domain_2 <- id_domain_2[id_domain_2$V1!=0,]
id_domain_3 <- id_domain_3[id_domain_3$V1!=0,]
#Calculate mean pair-wise identities
mean(id_domain_1[id_domain_1$type=='all', 1])
mean(id_domain_2[id_domain_2$type=='all', 1])
mean(id_domain_3[id_domain_3$type=='all', 1])
min(id_domain_1$V1)
min(id_domain_2$V1)
min(id_domain_3$V1)
#plot the historgam with the distirubution of the pair-wise domain identities
ggplot(id_domain_3, aes(V1, fill=type)) +
geom_histogram(color='black', alpha=0.9, bins = 120)+
theme_bw()+scale_fill_manual(values = c("#DC143C", '#5F9EA0' ))+
theme( axis.text.x = element_text(color='black',
size=12),
axis.title.x=element_text(face="bold", color="black",
size=14),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(color='black',
size=12),
axis.title.y = element_text(face="bold", color="black",
size=14),
legend.title=element_text(face="bold",size=14),
legend.text=element_text(size=12))+
xlab('Identity percent') +
ylab('Frequency')+xlim(c(30,100))+ylim(c(0, 60000))+
guides(fill= guide_legend(title="Toxins' group"))
domain_lengths <- read.csv('lengths_combined.csv', header = F, sep = "\t", stringsAsFactors = F)
dom1 <-domain_lengths[domain_lengths$V3=='domain1',]
dom2 <-domain_lengths[domain_lengths$V3=='domain2',]
dom3 <-domain_lengths[domain_lengths$V3=='domain3',]
#Plot the distributions of domain lengths
ggplot(dom2, aes(x=V2, fill=V4)) +
geom_histogram(color='black', alpha=0.9, bins = 100)+
theme_bw()+scale_fill_manual(values = c("#DC143C", '#5F9EA0' ))+
theme( axis.text.x = element_text(color='black',
size=12),
axis.title.x=element_text(face="bold", color="black",
size=14),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(color='black',
size=12),
axis.title.y = element_text(face="bold", color="black",
size=14),
legend.title=element_text(face="bold",size=14),
legend.text=element_text(size=12))+
xlab("Domain length") +
ylab('Frequency')+xlim(c(230, 850))+ylim(c(0,300))+
guides(fill= guide_legend(title="Toxins' group"))
