data_for_tox_heatmap$type_for_scatter <-  paste(data_for_tox_heatmap$Change_flag, data_for_tox_heatmap$Domain ,
data_for_tox_heatmap$ID,  sep = '_')
#Summarize the number of affeted hots corrsponding to their orders
#Third rank of toxis within the set of events with different affected orders for parents and recombinants
d3<- dcast(data_for_tox_heatmap[data_for_tox_heatmap$Mode=='Rank3' & data_for_tox_heatmap$Host!='Unknown' & data_for_tox_heatmap$Change_flag =='Different',c(4,5, 11, 12, 13, 14)],
type_for_scatter+Tox_type+ radius_for_scatter+ mean_ident~ Host, value.var = "num_for_scatter")
d3$Tox_type <- factor(d3$Tox_type, levels = c('Rec', 'Min', 'Maj'))
d3 <- d3 %>%
mutate(type_num = as.numeric(as.factor(type_for_scatter)),
tox_num = as.numeric(Tox_type))
#Fourth rank of toxis within the set of events with different affected orders for parents and recombinants
d4<- dcast(data_for_tox_heatmap[data_for_tox_heatmap$Mode=='Rank4' & data_for_tox_heatmap$Host!='Unknown' & data_for_tox_heatmap$Change_flag =='Different',c(4,5, 11, 12,13, 14)],
type_for_scatter+Tox_type+ radius_for_scatter +mean_ident ~ Host, value.var = "num_for_scatter")
d4$Tox_type <- factor(d4$Tox_type, levels = c('Rec', 'Min', 'Maj'))
d4 <- d4 %>%
mutate(type_num = as.numeric(as.factor(type_for_scatter)),
tox_num = as.numeric(Tox_type))
#Fourth rank of toxis within the set of events with same affected orders for parents and recombinants
d5 <- dcast(data_for_tox_heatmap[data_for_tox_heatmap$Mode=='Rank4' & data_for_tox_heatmap$Host!='Unknown' & data_for_tox_heatmap$Change_flag =='Same',c(4,5, 11, 12,13, 14)],
type_for_scatter+Tox_type+ radius_for_scatter + mean_ident~ Host, value.var = "num_for_scatter")
d5$Tox_type <- factor(d5$Tox_type, levels = c('Rec', 'Min', 'Maj'))
d5 <- d5 %>%
mutate(type_num = as.numeric(as.factor(type_for_scatter)),
tox_num = as.numeric(Tox_type))
#Third rank of toxis within the set of events with same affected orders for parents and recombinants
d6<- dcast(data_for_tox_heatmap[data_for_tox_heatmap$Mode=='Rank3' & data_for_tox_heatmap$Host!='Unknown' & data_for_tox_heatmap$Change_flag =='Same',c(4,5, 11, 12,13, 14)],
type_for_scatter+Tox_type+ radius_for_scatter + mean_ident~ Host, value.var = "num_for_scatter")
d6$Tox_type <- factor(d6$Tox_type, levels = c('Rec', 'Min', 'Maj'))
d6 <- d6 %>%
mutate(type_num = as.numeric(as.factor(type_for_scatter)),
tox_num = as.numeric(Tox_type))
#Third rank of toxis coupled with strains within the set of events with different affected orders for parents and recombinants
d_strains_dif <- dcast(data_for_tox_heatmap[data_for_tox_heatmap$Mode=='Strains_add' & data_for_tox_heatmap$Host!='Unknown' & data_for_tox_heatmap$Change_flag =='Different',c(4,5, 11, 12,13, 14)],
type_for_scatter+Tox_type+ radius_for_scatter + mean_ident~ Host, value.var = "num_for_scatter")
d_strains_dif$Tox_type <- factor(d_strains_dif$Tox_type, levels = c('Rec', 'Min', 'Maj'))
d_strains_dif <- d_strains_dif %>%
mutate(type_num = as.numeric(as.factor(type_for_scatter)),
tox_num = as.numeric(Tox_type))
#Third rank of toxis coupled with strains within the set of events with same affected orders for parents and recombinants
d_strains_same <- dcast(data_for_tox_heatmap[data_for_tox_heatmap$Mode=='Strains_add' & data_for_tox_heatmap$Host!='Unknown' & data_for_tox_heatmap$Change_flag =='Same',c(4,5, 11, 12,13, 14)],
type_for_scatter+Tox_type+ radius_for_scatter + mean_ident~ Host, value.var = "num_for_scatter")
d_strains_same$Tox_type <- factor(d_strains_same$Tox_type, levels = c('Rec', 'Min', 'Maj'))
d_strains_same <- d_strains_same %>%
mutate(type_num = as.numeric(as.factor(type_for_scatter)),
tox_num = as.numeric(Tox_type))
#Vizualise the distribution of pie charts showing the percentage of affected orders for toxins
ggplot() + geom_scatterpie(aes(x=tox_num, y=type_num, r=0.37), data=d_strains_same,
#cols=c('Coleoptera', 'Diptera', 'Hemiptera' ,'Human', 'Lepidoptera'),  alpha =.7)+
#cols=c('Coleoptera', 'Diptera', 'Hemiptera' ,'Human', 'Lepidoptera', 'Nematoda'),  alpha =.7)+
#cols=c('Coleoptera','Lepidoptera', 'Nematoda'),  alpha =.7)+
#cols=c('Lepidoptera', 'Nematoda'),  alpha =.7)+
cols=c('Coleoptera','Diptera','Lepidoptera', 'Nematoda'),  alpha =.7)+
coord_equal()+
#scale_fill_manual(values = c('#42B540FF', '#ED0000FF', '#925E9FFF', '#FDAF91FF', '#00468BFF', '#0099B4FF') )+
#scale_fill_manual(values = c('#42B540FF', '#00468BFF', '#0099B4FF') )+ #rank4 same
#scale_fill_manual(values = c('#00468BFF', '#0099B4FF') )+ #rank3 same
scale_fill_manual(values = c('#42B540FF', '#ED0000FF','#00468BFF', '#0099B4FF') )+ #strains_same
theme_bw()+ylab('Recombination ID')+xlab('Group')+
scale_x_continuous(breaks=c(1,2,3), labels=c("Rec", "Min", "Maj")) +
#scale_y_continuous(breaks=c(1:17), labels=c("34","38", "87","95",'107',"71","109", "14",'2',"23","24","27","29",'37','51',"52",'98'))+ #strains diff
scale_y_continuous(breaks=c(1:13), labels=c("119","56","62",'96','104', "17","19","44",'49',"53",'6','73', "8"))+ #strains same
#scale_y_continuous(breaks=c(1:11), labels=c("34","38", "87","95","71","109", "14","23","27","29","52"))+ #rank4 diff
#scale_y_continuous(breaks=c(1:14), labels=c("34","38", "87","95","71","109", "14","23","24","27","29",'51',"52",'98'))+ #rank3 diff
#scale_y_continuous(breaks=c(1:8), labels=c("119","56", "17","19","44","53", "8","98"))+ #rank4 same
#scale_y_continuous(breaks=c(1:8), labels=c("119","56","62", "17","19","44","53", "8"))+ #rank3 same
theme(axis.text.x = element_text(color='black',
size=14),
axis.ticks.x = element_blank(),
axis.title.x=element_text(face="bold", color="black",
size=18),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(color='black',
size=14),
axis.title.y = element_text(face="bold", color="black",
size=18),
legend.title=element_text(face="bold",size=18),
legend.text=element_text(size=16))
mearged_ident_df_for_scatter  <- dcast(data_for_tox_heatmap[data_for_tox_heatmap$mean_ident>0,c(2,4,5,6, 11, 12,13, 14)],
type_for_scatter+Tox_type+ radius_for_scatter + mean_ident + Mode +Change_flag ~ Host, value.var = "num_for_scatter") %>%
mutate(Tox_type = factor(Tox_type, levels = c('Rec', 'Min', 'Maj')))%>%
mutate(type_num = as.numeric(as.factor(type_for_scatter)),
tox_num = as.numeric(Tox_type))
mearged_ident_df_for_scatter <- mearged_ident_df_for_scatter[mearged_ident_df_for_scatter$Tox_type!='Rec',]
ggplot() +
#geom_tile(aes(x='Domain', y=type_for_scatter,
#                       fill = unlist(lapply(type_for_scatter, function (x) strsplit(as.character(x), "_", fixed=TRUE)[[1]][2]))),
#                   alpha =0.8, data=d_strains_same)+  #DOMAINS
#scale_fill_manual( values=c("#a60b0b", '#2980b9' ,'#bdbd00'))+ #Diff
#scale_fill_manual( values=c("#a60b0b",'#bdbd00'))+ #Same
geom_point(aes(x=Tox_type, y=type_for_scatter,   #Size plot: 7/9
fill = mean_ident,
size = radius_for_scatter),
alpha =0.9,
shape = 21, color = 'black', data=mearged_ident_df_for_scatter[mearged_ident_df_for_scatter$Tox_type!='Rec' & mearged_ident_df_for_scatter$Mode=='Strains_add' & mearged_ident_df_for_scatter$Change_flag=='Same',])+
#facet_wrap(~Mode+Change_flag, scales = 'free')+
scale_fill_gradient(low = "#FDFDFD", high = "darkred", limit = c(50,100), space = "Lab")+
scale_size(range = c(2,3))+
theme_bw()+
theme( axis.text.x = element_text(color='black',
size=12, angle = 45, hjust = 1),
axis.title.x=element_text(face="bold", color="black",
size=14),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(color='black',
size=7.5),
axis.title.y = element_text(face="bold", color="black",
size=14),
legend.title=element_text(face="bold",size=16),
legend.text=element_text(size=14))+
ylab('Event ID') +
xlab('Domain')+
coord_fixed()+
guides(fill=guide_legend(override.aes = list(size=7), title="Domain"))
ggplot() +
#geom_tile(aes(x='Domain', y=type_for_scatter,
#                       fill = unlist(lapply(type_for_scatter, function (x) strsplit(as.character(x), "_", fixed=TRUE)[[1]][2]))),
#                   alpha =0.8, data=d_strains_same)+  #DOMAINS
#scale_fill_manual( values=c("#a60b0b", '#2980b9' ,'#bdbd00'))+ #Diff
#scale_fill_manual( values=c("#a60b0b",'#bdbd00'))+ #Same
geom_point(aes(x=Tox_type, y=type_for_scatter,   #Size plot: 7/9
fill = mean_ident,
size = radius_for_scatter),
alpha =0.9,
shape = 21, color = 'black', data=mearged_ident_df_for_scatter[mearged_ident_df_for_scatter$Tox_type!='Rec' & mearged_ident_df_for_scatter$Mode=='Strains_add' & mearged_ident_df_for_scatter$Change_flag=='Same',])+
#facet_wrap(~Mode+Change_flag, scales = 'free')+
scale_fill_gradient(low = "#FDFDFD", high = "darkred", limit = c(50,100), space = "Lab")+
scale_size(range = c(2,3))+
theme_bw()+
theme( axis.text.x = element_text(color='black',
size=12, angle = 45, hjust = 1),
axis.title.x=element_text(face="bold", color="black",
size=14),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(color='black',
size=7.5),
axis.title.y = element_text(face="bold", color="black",
size=14),
legend.title=element_text(face="bold",size=16),
legend.text=element_text(size=14))+
ylab('Event ID') +
xlab('Domain')+
coord_fixed()+
guides(fill=guide_legend(override.aes = list(size=7), title="Domain"))
d_strains_same
View(data_for_tox_heatmap)
data_for_tox_heatmap <- read.csv('Hosts_for_heatmap_stat_per_species.csv', header = T, sep = "\t", stringsAsFactors = F)
#Read the table with domain-wise identities between parents and recombinants within recobination events
ident_stat <- read.csv('Identity_per_dataset_with_unknowns.csv', header = T, sep = "\t", stringsAsFactors = F)
#Extract identity data for transferred domains within fltered set of events
ident_stat <- ident_stat[ident_stat$Dataset == 'filt_tree' & ident_stat$Dom_type =='Transferred' & ident_stat$Aln_type  =='Extr', ]
identity_for_filt_df <- ident_stat %>% group_by(ID, Par_type, Domain) %>%
dplyr::summarize(mean_ident = mean(Ident), dispertion = sd(Ident)) %>% as.data.frame()
#Create a dummy factor for plotting on the Y axis
data_for_tox_heatmap$y <- paste(data_for_tox_heatmap$Change_flag, data_for_tox_heatmap$Domain ,
data_for_tox_heatmap$ID, data_for_tox_heatmap$Tox_type, sep = '_')
#Assert pseudocoordinate for plotting scatterplots
data_for_tox_heatmap$num_for_scatter <- 1
#Specify the size of circles depending on the number of recombinants
data_for_tox_heatmap$radius_for_scatter <- data_for_tox_heatmap$Num_recs
#Assert mean identity dummy
data_for_tox_heatmap$mean_ident <- 100
#Extract mean identity for sets of minor and major parents within recombination events
identity_minors <- identity_for_filt_df[identity_for_filt_df$Par_type=='Minor',]
identity_majors <- identity_for_filt_df[identity_for_filt_df$Par_type=='Major',]
#Add identity to the dataframe with event-wise specificity spectrum
for (ID in unique(data_for_tox_heatmap$ID)){
data_for_tox_heatmap[data_for_tox_heatmap$ID==ID & data_for_tox_heatmap$Tox_type=='Min',13] <- identity_minors[identity_minors$ID == ID,4]
data_for_tox_heatmap[data_for_tox_heatmap$ID==ID & data_for_tox_heatmap$Tox_type=='Maj',13] <- identity_majors[identity_majors$ID == ID,4]
}
#Cange pseudocoordinates for scatterplots belonging to major and minor events
data_for_tox_heatmap[data_for_tox_heatmap$Tox_type=='Min',12] <-  data_for_tox_heatmap[data_for_tox_heatmap$Tox_type=='Min',8] +data_for_tox_heatmap[data_for_tox_heatmap$Tox_type=='Min',12]
data_for_tox_heatmap[data_for_tox_heatmap$Tox_type=='Maj',12] <-  data_for_tox_heatmap[data_for_tox_heatmap$Tox_type=='Maj',9] +data_for_tox_heatmap[data_for_tox_heatmap$Tox_type=='Maj',12]
#Make the variable for the order on the Y axis
data_for_tox_heatmap$type_for_scatter <-  paste(data_for_tox_heatmap$Change_flag, data_for_tox_heatmap$Domain ,
data_for_tox_heatmap$ID,  sep = '_')
#Summarize the number of affeted hots corrsponding to their orders
#Third rank of toxis within the set of events with different affected orders for parents and recombinants
d3<- dcast(data_for_tox_heatmap[data_for_tox_heatmap$Mode=='Rank3' & data_for_tox_heatmap$Host!='Unknown' & data_for_tox_heatmap$Change_flag =='Different',c(4,5, 11, 12, 13, 14)],
type_for_scatter+Tox_type+ radius_for_scatter+ mean_ident~ Host, value.var = "num_for_scatter")
d3$Tox_type <- factor(d3$Tox_type, levels = c('Rec', 'Min', 'Maj'))
d3 <- d3 %>%
mutate(type_num = as.numeric(as.factor(type_for_scatter)),
tox_num = as.numeric(Tox_type))
#Fourth rank of toxis within the set of events with different affected orders for parents and recombinants
d4<- dcast(data_for_tox_heatmap[data_for_tox_heatmap$Mode=='Rank4' & data_for_tox_heatmap$Host!='Unknown' & data_for_tox_heatmap$Change_flag =='Different',c(4,5, 11, 12,13, 14)],
type_for_scatter+Tox_type+ radius_for_scatter +mean_ident ~ Host, value.var = "num_for_scatter")
d4$Tox_type <- factor(d4$Tox_type, levels = c('Rec', 'Min', 'Maj'))
d4 <- d4 %>%
mutate(type_num = as.numeric(as.factor(type_for_scatter)),
tox_num = as.numeric(Tox_type))
#Fourth rank of toxis within the set of events with same affected orders for parents and recombinants
d5 <- dcast(data_for_tox_heatmap[data_for_tox_heatmap$Mode=='Rank4' & data_for_tox_heatmap$Host!='Unknown' & data_for_tox_heatmap$Change_flag =='Same',c(4,5, 11, 12,13, 14)],
type_for_scatter+Tox_type+ radius_for_scatter + mean_ident~ Host, value.var = "num_for_scatter")
d5$Tox_type <- factor(d5$Tox_type, levels = c('Rec', 'Min', 'Maj'))
d5 <- d5 %>%
mutate(type_num = as.numeric(as.factor(type_for_scatter)),
tox_num = as.numeric(Tox_type))
#Third rank of toxis within the set of events with same affected orders for parents and recombinants
d6<- dcast(data_for_tox_heatmap[data_for_tox_heatmap$Mode=='Rank3' & data_for_tox_heatmap$Host!='Unknown' & data_for_tox_heatmap$Change_flag =='Same',c(4,5, 11, 12,13, 14)],
type_for_scatter+Tox_type+ radius_for_scatter + mean_ident~ Host, value.var = "num_for_scatter")
d6$Tox_type <- factor(d6$Tox_type, levels = c('Rec', 'Min', 'Maj'))
d6 <- d6 %>%
mutate(type_num = as.numeric(as.factor(type_for_scatter)),
tox_num = as.numeric(Tox_type))
#Third rank of toxis coupled with strains within the set of events with different affected orders for parents and recombinants
d_strains_dif <- dcast(data_for_tox_heatmap[data_for_tox_heatmap$Mode=='Strains_add' & data_for_tox_heatmap$Host!='Unknown' & data_for_tox_heatmap$Change_flag =='Different',c(4,5, 11, 12,13, 14)],
type_for_scatter+Tox_type+ radius_for_scatter + mean_ident~ Host, value.var = "num_for_scatter")
d_strains_dif$Tox_type <- factor(d_strains_dif$Tox_type, levels = c('Rec', 'Min', 'Maj'))
d_strains_dif <- d_strains_dif %>%
mutate(type_num = as.numeric(as.factor(type_for_scatter)),
tox_num = as.numeric(Tox_type))
#Third rank of toxis coupled with strains within the set of events with same affected orders for parents and recombinants
d_strains_same <- dcast(data_for_tox_heatmap[data_for_tox_heatmap$Mode=='Strains_add' & data_for_tox_heatmap$Host!='Unknown' & data_for_tox_heatmap$Change_flag =='Same',c(4,5, 11, 12,13, 14)],
type_for_scatter+Tox_type+ radius_for_scatter + mean_ident~ Host, value.var = "num_for_scatter")
d_strains_same$Tox_type <- factor(d_strains_same$Tox_type, levels = c('Rec', 'Min', 'Maj'))
d_strains_same <- d_strains_same %>%
mutate(type_num = as.numeric(as.factor(type_for_scatter)),
tox_num = as.numeric(Tox_type))
#Vizualise the distribution of pie charts showing the percentage of affected orders for toxins
ggplot() + geom_scatterpie(aes(x=tox_num, y=type_num, r=0.37), data=d_strains_same,
#cols=c('Coleoptera', 'Diptera', 'Hemiptera' ,'Human', 'Lepidoptera'),  alpha =.7)+
#cols=c('Coleoptera', 'Diptera', 'Hemiptera' ,'Human', 'Lepidoptera', 'Nematoda'),  alpha =.7)+
#cols=c('Coleoptera','Lepidoptera', 'Nematoda'),  alpha =.7)+
#cols=c('Lepidoptera', 'Nematoda'),  alpha =.7)+
cols=c('Coleoptera','Diptera','Lepidoptera', 'Nematoda'),  alpha =.7)+
coord_equal()+
#scale_fill_manual(values = c('#42B540FF', '#ED0000FF', '#925E9FFF', '#FDAF91FF', '#00468BFF', '#0099B4FF') )+
#scale_fill_manual(values = c('#42B540FF', '#00468BFF', '#0099B4FF') )+ #rank4 same
#scale_fill_manual(values = c('#00468BFF', '#0099B4FF') )+ #rank3 same
scale_fill_manual(values = c('#42B540FF', '#ED0000FF','#00468BFF', '#0099B4FF') )+ #strains_same
theme_bw()+ylab('Recombination ID')+xlab('Group')+
scale_x_continuous(breaks=c(1,2,3), labels=c("Rec", "Min", "Maj")) +
#scale_y_continuous(breaks=c(1:17), labels=c("34","38", "87","95",'107',"71","109", "14",'2',"23","24","27","29",'37','51',"52",'98'))+ #strains diff
scale_y_continuous(breaks=c(1:13), labels=c("119","56","62",'96','104', "17","19","44",'49',"53",'6','73', "8"))+ #strains same
#scale_y_continuous(breaks=c(1:11), labels=c("34","38", "87","95","71","109", "14","23","27","29","52"))+ #rank4 diff
#scale_y_continuous(breaks=c(1:14), labels=c("34","38", "87","95","71","109", "14","23","24","27","29",'51',"52",'98'))+ #rank3 diff
#scale_y_continuous(breaks=c(1:8), labels=c("119","56", "17","19","44","53", "8","98"))+ #rank4 same
#scale_y_continuous(breaks=c(1:8), labels=c("119","56","62", "17","19","44","53", "8"))+ #rank3 same
theme(axis.text.x = element_text(color='black',
size=14),
axis.ticks.x = element_blank(),
axis.title.x=element_text(face="bold", color="black",
size=18),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(color='black',
size=14),
axis.title.y = element_text(face="bold", color="black",
size=18),
legend.title=element_text(face="bold",size=18),
legend.text=element_text(size=16))
mearged_ident_df_for_scatter  <- dcast(data_for_tox_heatmap[data_for_tox_heatmap$mean_ident>0,c(2,4,5,6, 11, 12,13, 14)],
type_for_scatter+Tox_type+ radius_for_scatter + mean_ident + Mode +Change_flag ~ Host, value.var = "num_for_scatter") %>%
mutate(Tox_type = factor(Tox_type, levels = c('Rec', 'Min', 'Maj')))%>%
mutate(type_num = as.numeric(as.factor(type_for_scatter)),
tox_num = as.numeric(Tox_type))
ggplot() +
#geom_tile(aes(x='Domain', y=type_for_scatter,
#                       fill = unlist(lapply(type_for_scatter, function (x) strsplit(as.character(x), "_", fixed=TRUE)[[1]][2]))),
#                   alpha =0.8, data=d_strains_same)+  #DOMAINS
#scale_fill_manual( values=c("#a60b0b", '#2980b9' ,'#bdbd00'))+ #Diff
#scale_fill_manual( values=c("#a60b0b",'#bdbd00'))+ #Same
geom_point(aes(x=Tox_type, y=type_for_scatter,   #Size plot: 7/9
fill = mean_ident,
size = radius_for_scatter),
alpha =0.9,
shape = 21, color = 'black', data=mearged_ident_df_for_scatter[mearged_ident_df_for_scatter$Tox_type!='Rec' & mearged_ident_df_for_scatter$Mode=='Strains_add' & mearged_ident_df_for_scatter$Change_flag=='Same',])+
#facet_wrap(~Mode+Change_flag, scales = 'free')+
scale_fill_gradient(low = "#FDFDFD", high = "darkred", limit = c(50,100), space = "Lab")+
scale_size(range = c(2,3))+
theme_bw()+
theme( axis.text.x = element_text(color='black',
size=12, angle = 45, hjust = 1),
axis.title.x=element_text(face="bold", color="black",
size=14),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(color='black',
size=7.5),
axis.title.y = element_text(face="bold", color="black",
size=14),
legend.title=element_text(face="bold",size=16),
legend.text=element_text(size=14))+
ylab('Event ID') +
xlab('Domain')+
coord_fixed()+
guides(fill=guide_legend(override.aes = list(size=7), title="Domain"))
mearged_ident_df_for_scatter
Simpson_species_stat <- read.csv('/home/anton/phyl/strain_graph/descriptive_stat/Simpson_stat_for_events.csv',
header = T, sep = "\t", stringsAsFactors = F)
#ggplot(rank4_mearged, aes(color=same_flag, x=mean_ident, y=radius_for_scatter, shape=Tox_type))+
#  geom_point(alpha = 0.9, size=6)+
Simpson_species_stat$Tox_type <- factor(Simpson_species_stat$Tox_type, levels = c('min','maj'))
ggplot(Simpson_species_stat, aes(color=Domain, x=Ident, y=Simp_coeff, shape=Tox_type, size =Tox_num))+
geom_point(alpha = 0.9)+
facet_wrap(~Mode)+
scale_size(range = c(2,7))+
scale_color_manual( values=c("#a60b0b", '#2980b9' ,'#bdbd00'))+
theme_bw()+
labs(y = "Overlap coefficient") +
labs(x = "Identity percent")+
theme( axis.text.x = element_text(color='black',
size=16),
axis.title.x=element_text(face="bold", color="black",
size=18),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(color='black',
size=16),
axis.title.y = element_text(face="bold", color="black",
size=18),
legend.title=element_text(face="bold",size=16),
legend.text=element_text(size=14))
#scale_color_manual(values = wes_palette("Darjeeling2", 12, type = "continuous"))+
#guides( shape=guide_legend(override.aes = list(size=5), title="Parent type"),
#        color=guide_legend(override.aes = list(size=5), title="Affected host orders"))
strains_mearged <- rbind(d_strains_same[, c(1,2,3,4)], d_strains_dif[, c(1,2,3,4)])
rank3_mearged <- rbind(d3[, c(1,2,3,4)], d6[, c(1,2,3,4)])
rank4_mearged <- rbind(d4[, c(1,2,3,4)], d5[, c(1,2,3,4)])
strains_mearged$same_flag <- unlist(lapply(strains_mearged$type_for_scatter, function (x) strsplit(as.character(x), "_", fixed=TRUE)[[1]][1]))
rank3_mearged$same_flag <- unlist(lapply(rank3_mearged$type_for_scatter, function (x) strsplit(as.character(x), "_", fixed=TRUE)[[1]][1]))
rank4_mearged$same_flag <- unlist(lapply(rank4_mearged$type_for_scatter, function (x) strsplit(as.character(x), "_", fixed=TRUE)[[1]][1]))
strains_mearged <- strains_mearged[strains_mearged$Tox_type!='Rec',]
rank3_mearged <- rank3_mearged[rank3_mearged$Tox_type!='Rec',]
rank4_mearged <- rank4_mearged[rank4_mearged$Tox_type!='Rec',]
rank4_mearged$logit_var <- rank4_mearged$same_flag=='Same'
rank3_mearged$logit_var <- rank3_mearged$same_flag=='Same'
strains_mearged$logit_var <- strains_mearged$same_flag=='Same'
rank4_mearged$Tox_type <- factor(rank4_mearged$Tox_type )
rank3_mearged$Tox_type <- factor(rank3_mearged$Tox_type)
strains_mearged$Tox_type <- factor(strains_mearged$Tox_type)
# radius_for_scatter mean_ident Tox_type
logit_rank4 <- glm(logit_var ~ radius_for_scatter+mean_ident+Tox_type , data = rank4_mearged, family = "binomial")
logit_rank3 <- glm(logit_var ~ radius_for_scatter+mean_ident+Tox_type , data = rank3_mearged, family = "binomial")
logit_strains <- glm(logit_var ~ radius_for_scatter+mean_ident+Tox_type , data = strains_mearged, family = "binomial")
summary(logit_rank4)
summary(logit_rank3)
summary(logit_strains)
rank4_mearged$Type <- 'Rank4'
rank3_mearged$Type <- 'Rank3'
strains_mearged$Type <- 'Strains'
rank4_mearged$ID <- unlist(lapply(rank4_mearged$type_for_scatter, function (x) strsplit(as.character(x), "_", fixed=TRUE)[[1]][3]))
rank3_mearged$ID <-unlist(lapply(rank3_mearged$type_for_scatter, function (x) strsplit(as.character(x), "_", fixed=TRUE)[[1]][3]))
strains_mearged$ID<- unlist(lapply(strains_mearged$type_for_scatter, function (x) strsplit(as.character(x), "_", fixed=TRUE)[[1]][3]))
rank4_mearged$domain<- unlist(lapply(rank4_mearged$type_for_scatter, function (x) strsplit(as.character(x), "_", fixed=TRUE)[[1]][2]))
rank3_mearged$domain<- unlist(lapply(rank3_mearged$type_for_scatter, function (x) strsplit(as.character(x), "_", fixed=TRUE)[[1]][2]))
strains_mearged$domain<- unlist(lapply(strains_mearged$type_for_scatter, function (x) strsplit(as.character(x), "_", fixed=TRUE)[[1]][2]))
for_tab_S39 <- rbind(rank4_mearged, rank3_mearged, strains_mearged)
for_tab_S39
ggplot(Simpson_species_stat[Simpson_species_stat$Domain!='domain2',], aes(fill=Tox_type, x=Simp_coeff))+
facet_wrap(~Mode+Domain)+
scale_fill_manual( values = c("#4F499E",'#89A05C' ), labels = c("Minor",'Major'))+
geom_density(alpha = 0.8,  adjust = 1/1.5)+
#geom_histogram(alpha = 0.8, position = position_dodge2(width = 0.9, preserve = "single"), bins = 5, color='black')
theme_bw()+ylab('Density')+xlab('Overlap Coefficient')+
theme( axis.text.x = element_text(color='black',
size=12),
axis.title.x=element_text(face="bold", color="black",
size=18),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(color='black',
size=14),
axis.title.y = element_text(face="bold", color="black",
size=18),
legend.title=element_text(face="bold",size=18),
legend.text=element_text(size=16))
ggplot(Simpson_species_stat, aes(color=Domain, x=Ident, y=Simp_coeff, shape=Tox_type, size =Tox_num))+
geom_point(alpha = 0.9)+
facet_wrap(~Mode)+
scale_size(range = c(2,7))+
scale_color_manual( values=c("#a60b0b", '#2980b9' ,'#bdbd00'))+
theme_bw()+
labs(y = "Overlap coefficient") +
labs(x = "Identity percent")+
theme( axis.text.x = element_text(color='black',
size=16),
axis.title.x=element_text(face="bold", color="black",
size=18),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(color='black',
size=16),
axis.title.y = element_text(face="bold", color="black",
size=18),
legend.title=element_text(face="bold",size=16),
legend.text=element_text(size=14))
lm_simpson <- lm(Simp_coeff ~ Tox_type*Domain,
data = Simpson_species_stat[Simpson_species_stat$Mode=='Strains_add' & Simpson_species_stat$Domain!='domain2',-c(1,6)])
summary(lm_simpson)
Simpson_species_stat[Simpson_species_stat$Tox_type=='maj',] %>% group_by(ID, Mode, Domain) %>% summarise(num=n()) %>% as.data.frame() %>%
group_by( Mode, Domain) %>% summarise(num=n()) %>% as.data.frame()
Simpson_species_stat[Simpson_species_stat$Domain!='domain2',] %>% group_by(Mode, Domain, Tox_type) %>% summarize(mean_sipm = mean(Simp_coeff))
ggplot(Simpson_species_stat[Simpson_species_stat$Domain!='domain2',], aes(fill=Tox_type, x=Simp_coeff))+
facet_wrap(~Mode+Domain)+
scale_fill_manual( values = c("#4F499E",'#89A05C' ), labels = c("Minor",'Major'))+
geom_density(alpha = 0.8,  adjust = 1/1.5)+
#geom_histogram(alpha = 0.8, position = position_dodge2(width = 0.9, preserve = "single"), bins = 5, color='black')
theme_bw()+ylab('Density')+xlab('Overlap Coefficient')+
theme( axis.text.x = element_text(color='black',
size=12),
axis.title.x=element_text(face="bold", color="black",
size=18),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(color='black',
size=14),
axis.title.y = element_text(face="bold", color="black",
size=18),
legend.title=element_text(face="bold",size=18),
legend.text=element_text(size=16))
plasm_chom_pie <- data.frame(num = c(68,23), location = c('Plasmids', 'Chromosomes'))
ggplot(plasm_chom_pie, aes(x='',y=location,fill=location)) +
geom_bar(stat="identity", width=1, alpha=0.75, col='black')+
coord_polar(theta = "y")+
geom_text(aes(label = num),
position = position_stack(vjust = 0.5), size=10)+
theme_bw()+
scale_fill_manual(values =c('#46B8DAFF', '#357EBDFF'))+
scale_size(guide = 'none')+
theme( axis.text.x = element_blank(),
axis.title.x=element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
legend.title=element_text(face="bold",size=14),
legend.text=element_text(size=12),
axis.ticks = element_blank(),
axis.line.x =  element_blank(),
axis.line.y =  element_blank())+
guides(fill= guide_legend(title="Gene cluster group"))
tree_brach_stat <-  read.csv('/home/anton/phyl/strain_graph/testing_spec_on_evol/Distribution_of_branch_lengths_no_domain2.csv',
header = T, sep = "\t", stringsAsFactors = F)
tree_brach_stat <- tree_brach_stat[tree_brach_stat$Type!='domain2',]
tree_brach_stat %>% group_by(Type,Tree_domain, Parent_type) %>% summarise(mean_d = mean(Dist))
ggplot(tree_brach_stat[tree_brach_stat$Num_nodes!=-1,], aes(fill=Parent_type, y=Dist, x=Parent_type))+ #x=Dist || x=Parent_type - box-plot
facet_wrap(~Type+Tree_domain)+
geom_boxplot() +
#geom_histogram(alpha = 0.5, position = position_dodge2(width = 0.9, preserve = "single"), bins = 30, color='black')+
theme_bw()+
geom_signif(comparisons = list(c("Maj","Ref"),
c('Min', 'Ref')),
map_signif_level=T, test='wilcox.test')
num_hosts_per_protein_group <- read.csv('/home/anton/phyl/strain_graph/descriptive_stat/num_hosts_per_toxin_group.csv',
header = T, sep = "\t", stringsAsFactors = F)
num_hosts_per_protein_group <- num_hosts_per_protein_group[num_hosts_per_protein_group$Num_hosts>0,]
num_hosts_strict <- num_hosts_per_protein_group[num_hosts_per_protein_group$Tox_type!='par_all',]
num_hosts_all <- num_hosts_per_protein_group[num_hosts_per_protein_group$Tox_type!='par_strict',]
num_hosts_strict$Tox_type <- factor(num_hosts_strict$Tox_type, levels = c('rec', 'par_strict', 'ref_no_rec')) #par_strict
num_hosts_all$Tox_type <- factor(num_hosts_all$Tox_type, levels = c('rec', 'par_all', 'ref_no_rec')) #par_strict
#Num_hosts_per_tox_orders_strict
#Num_hosts_per_tox_species_all
num_hosts_strict[num_hosts_strict$Num_hosts<=15, ] %>% group_by(Host_type, Group, Tox_type) %>%  summarize(mean_host_num = mean(Num_hosts))
ggplot(num_hosts_strict[num_hosts_strict$Host_type=='Orders' & num_hosts_strict$Num_hosts<=100,], aes(fill=Tox_type, y=Num_hosts, x=Tox_type))+
facet_wrap(~Group, scales ='free')+
geom_violin(width=1.0, alpha = 0.7, trim = T)+
geom_boxplot(width=0.4, alpha = 0.8)+
#geom_signif(comparisons = list(c("rec","par_all"),
#                               c('rec', 'ref_no_rec'),
#                               c('par_all', 'ref_no_rec')),
#                               y_position = c(4, 4.6,4.3),
#            map_signif_level=T, test='wilcox.test')+
#ylim(c(1,15))+
#geom_signif(comparisons = list(c("rec","par_strict"),
#                               c('rec', 'ref_no_rec'),
#                               c('par_strict', 'ref_no_rec')),
#                               y_position = c(12, 14.6,13.3),
#            map_signif_level=T, test='wilcox.test')+
scale_fill_manual(labels = c("Recombinants",'Parents','Unaffected'), values = c("#CD5922", '#9A73BE' ,'grey'))+
theme_bw()+ylab('Number of affected hosts')+xlab('Group')+
theme( axis.text.x = element_text(color='black',
size=14),
axis.ticks.x = element_blank(),
axis.title.x=element_text(face="bold", color="black",
size=18),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(color='black',
size=14),
axis.title.y = element_text(face="bold", color="black",
size=18),
legend.title=element_text(face="bold",size=18),
legend.text=element_text(size=16))+
guides(fill= guide_legend(title="Toxin type"))
#9//4
